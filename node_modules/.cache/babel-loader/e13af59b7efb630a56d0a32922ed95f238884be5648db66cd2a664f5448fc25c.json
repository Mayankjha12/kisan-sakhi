{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import Header from'./components/Header';import Hero from'./components/Hero';import FormSection from'./components/FormSection';import Footer from'./components/Footer';import{translations}from'./data/translations';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supportedLangs=Object.keys(translations);function App(){// Determine initial language from a combination of form and web dropdowns\nconst initialLang='en';// Start with 'en' unless you store user preference\nconst[currentLang,setCurrentLang]=useState(initialLang);const[isFormVisible,setIsFormVisible]=useState(false);// Function to handle language sync across the whole app\nconst handleLanguageChange=useCallback(newLang=>{if(supportedLangs.includes(newLang)){setCurrentLang(newLang);document.documentElement.lang=newLang;}},[]);// Get the UI text objects for the current language\nconst langData=translations[currentLang]||translations.en;return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col font-lato text-gray-800\",children:[/*#__PURE__*/_jsx(Header,{langData:langData,currentLang:currentLang,onLangChange:handleLanguageChange}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex-grow\",children:[/*#__PURE__*/_jsx(Hero,{langData:langData,onShowForm:()=>{setIsFormVisible(true);// Optional: Scroll to the form after showing it\nsetTimeout(()=>{document.getElementById('form-section').scrollIntoView({behavior:'smooth'});},100);}}),isFormVisible&&/*#__PURE__*/_jsx(FormSection,{langData:langData,currentLang:currentLang,onLangChange:handleLanguageChange})]}),/*#__PURE__*/_jsx(Footer,{langData:langData})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","Hero","FormSection","Footer","translations","jsx","_jsx","jsxs","_jsxs","supportedLangs","Object","keys","App","initialLang","currentLang","setCurrentLang","isFormVisible","setIsFormVisible","handleLanguageChange","newLang","includes","document","documentElement","lang","langData","en","className","children","onLangChange","onShowForm","setTimeout","getElementById","scrollIntoView","behavior"],"sources":["/Users/mayankjha/Desktop/agro-kheti-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport FormSection from './components/FormSection';\nimport Footer from './components/Footer';\nimport { translations } from './data/translations';\n\nconst supportedLangs = Object.keys(translations);\n\nfunction App() {\n    // Determine initial language from a combination of form and web dropdowns\n    const initialLang = 'en'; // Start with 'en' unless you store user preference\n    const [currentLang, setCurrentLang] = useState(initialLang);\n    const [isFormVisible, setIsFormVisible] = useState(false);\n\n    // Function to handle language sync across the whole app\n    const handleLanguageChange = useCallback((newLang) => {\n        if (supportedLangs.includes(newLang)) {\n            setCurrentLang(newLang);\n            document.documentElement.lang = newLang;\n        }\n    }, []);\n\n    // Get the UI text objects for the current language\n    const langData = translations[currentLang] || translations.en;\n    \n    return (\n        <div className=\"min-h-screen flex flex-col font-lato text-gray-800\">\n            <Header \n                langData={langData} \n                currentLang={currentLang}\n                onLangChange={handleLanguageChange}\n            />\n            <main className=\"flex-grow\">\n                <Hero \n                    langData={langData}\n                    onShowForm={() => {\n                        setIsFormVisible(true);\n                        // Optional: Scroll to the form after showing it\n                        setTimeout(() => {\n                            document.getElementById('form-section').scrollIntoView({ behavior: 'smooth' });\n                        }, 100);\n                    }}\n                />\n                {isFormVisible && (\n                    <FormSection \n                        langData={langData} \n                        currentLang={currentLang}\n                        onLangChange={handleLanguageChange}\n                    />\n                )}\n            </main>\n            <Footer langData={langData} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,YAAY,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC,CAEhD,QAAS,CAAAQ,GAAGA,CAAA,CAAG,CACX;AACA,KAAM,CAAAC,WAAW,CAAG,IAAI,CAAE;AAC1B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAACgB,WAAW,CAAC,CAC3D,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACA,KAAM,CAAAqB,oBAAoB,CAAGnB,WAAW,CAAEoB,OAAO,EAAK,CAClD,GAAIV,cAAc,CAACW,QAAQ,CAACD,OAAO,CAAC,CAAE,CAClCJ,cAAc,CAACI,OAAO,CAAC,CACvBE,QAAQ,CAACC,eAAe,CAACC,IAAI,CAAGJ,OAAO,CAC3C,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAK,QAAQ,CAAGpB,YAAY,CAACU,WAAW,CAAC,EAAIV,YAAY,CAACqB,EAAE,CAE7D,mBACIjB,KAAA,QAAKkB,SAAS,CAAC,oDAAoD,CAAAC,QAAA,eAC/DrB,IAAA,CAACN,MAAM,EACHwB,QAAQ,CAAEA,QAAS,CACnBV,WAAW,CAAEA,WAAY,CACzBc,YAAY,CAAEV,oBAAqB,CACtC,CAAC,cACFV,KAAA,SAAMkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACvBrB,IAAA,CAACL,IAAI,EACDuB,QAAQ,CAAEA,QAAS,CACnBK,UAAU,CAAEA,CAAA,GAAM,CACdZ,gBAAgB,CAAC,IAAI,CAAC,CACtB;AACAa,UAAU,CAAC,IAAM,CACbT,QAAQ,CAACU,cAAc,CAAC,cAAc,CAAC,CAACC,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAClF,CAAC,CAAE,GAAG,CAAC,CACX,CAAE,CACL,CAAC,CACDjB,aAAa,eACVV,IAAA,CAACJ,WAAW,EACRsB,QAAQ,CAAEA,QAAS,CACnBV,WAAW,CAAEA,WAAY,CACzBc,YAAY,CAAEV,oBAAqB,CACtC,CACJ,EACC,CAAC,cACPZ,IAAA,CAACH,MAAM,EAACqB,QAAQ,CAAEA,QAAS,CAAE,CAAC,EAC7B,CAAC,CAEd,CAEA,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}